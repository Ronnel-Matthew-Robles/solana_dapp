import "dotenv/config";
import * as web3 from "@solana/web3.js";
// import the keypair in json generated by solana-keygen new
// it is important that it uses require because it is not a module
const keypairData =  require('./my-keypair.json');

// get the program_id to interact with
const program_id = process.env.PROGRAM_ID;

// point to the solana-test-validator
const cluster_url = process.env.CLUSTER_URL;

async function main() {
    // create connection instance
    const connection = new web3.Connection(cluster_url || '');

    // create transaction to be filled
    const transaction = new web3.Transaction();
    
    // create instruction
    const instruction = new web3.TransactionInstruction({
        keys: [],
        programId: new web3.PublicKey(program_id || '')
    });

    // add instruction to transaction
    transaction.add(instruction);

    // generate the keypair instance from the keypair json
    const keypair = web3.Keypair.fromSecretKey(Uint8Array.from(keypairData));

    console.log("Sending transaction...");

    // send the transaction
    const txHash = await web3.sendAndConfirmTransaction(connection, transaction, [keypair]);

    console.log('txHash', txHash);
}

main();